const t=Math.PI/180,n={multiply:function(t,n,e){const o=n[0],s=n[4],i=n[8],a=n[12],r=n[1],c=n[5],y=n[9],h=n[13],l=n[2],f=n[6],u=n[10],p=n[14],m=n[3],M=n[7],x=n[11],b=n[15],k=e[0],w=e[1],d=e[2],A=e[3],F=e[4],I=e[5],P=e[6],g=e[7],j=e[8],q=e[9],v=e[10],E=e[11],R=e[12],S=e[13],$=e[14],z=e[15];t[0]=o*k+s*F+i*j+a*R,t[4]=o*w+s*I+i*q+a*S,t[8]=o*d+s*P+i*v+a*$,t[12]=o*A+s*g+i*E+a*z,t[1]=r*k+c*F+y*j+h*R,t[5]=r*w+c*I+y*q+h*S,t[9]=r*d+c*P+y*v+h*$,t[13]=r*A+c*g+y*E+h*z,t[2]=l*k+f*F+u*j+p*R,t[6]=l*w+f*I+u*q+p*S,t[10]=l*d+f*P+u*v+p*$,t[14]=l*A+f*g+u*E+p*z,t[3]=m*k+M*F+x*j+b*R,t[7]=m*w+M*I+x*q+b*S,t[11]=m*d+M*P+x*v+b*$,t[15]=m*A+M*g+x*E+b*z},identity:function(t){for(let n=0;16>n;n++)t[n]=0;for(let n=0;16>n;n+=5)t[n]=1},translate:function(t,n,e,o){for(let s=0;4>s;s++)t[12+s]+=t[s]*n+t[4+s]*e+t[8+s]*o},scale:function(t,n,e,o){for(let s=0;4>s;s++)t[s]*=n,t[4+s]*=e,t[8+s]*=o},rotate:function(e,o,s,i,a){const r=new Float32Array(16);r[3]=0,r[7]=0,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1;const c=o*t,y=Math.sin(c),h=Math.cos(c);if(1===s&&0===i&&0===a)r[5]=h,r[10]=h,r[6]=y,r[9]=-y,r[1]=0,r[2]=0,r[4]=0,r[8]=0,r[0]=1;else if(0===s&&0===i&&0===a)r[0]=h,r[10]=h,r[8]=y,r[2]=-y,r[1]=0,r[4]=0,r[6]=0,r[9]=0,r[5]=1;else if(0===s&&0===i&&1===a)r[0]=h,r[5]=h,r[1]=y,r[4]=-y,r[2]=0,r[6]=0,r[8]=0,r[9]=0,r[10]=1;else{const t=Math.sqrt(s*s+i*i+a*a);if(1!==t){const n=1/t;s*=n,i*=n,a*=n}const n=1-h,e=s*i,o=i*a,c=a*s,l=s*y,f=i*y,u=a*y;r[0]=s*s*n+h,r[4]=e*n-u,r[8]=c*n+f,r[1]=e*n+u,r[5]=i*i*n+h,r[9]=o*n-l,r[2]=c*n-f,r[6]=o*n+l,r[10]=a*a*n+h}n.multiply(e,e,r)},rotateEuler:function(e,o,s,i){const a=new Float32Array(16),r=o*t,c=s*t,y=i*t,h=Math.cos(r),l=Math.sin(r),f=Math.cos(c),u=Math.sin(c),p=Math.cos(y),m=Math.sin(y),M=h*u,x=l*u;a[0]=f*p,a[1]=-f*m,a[2]=u,a[3]=0,a[4]=M*p+h*m,a[5]=-M*m+h*p,a[6]=-l*f,a[7]=0,a[8]=-x*p+l*m,a[9]=x*m+l*p,a[10]=h*f,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,n.multiply(e,e,a)},perspective:function(t,n,e,o,s){const i=1/Math.tan(n*(Math.PI/360)),a=1/(o-s);t[0]=i/e,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=i,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=(s+o)*a,t[11]=-1,t[12]=0,t[13]=0,t[14]=2*s*o*a,t[15]=0}};class e{constructor(t={}){"number"==typeof t.a&&(this.a=t.a),"number"==typeof t.k&&(this.k=t.k),"number"==typeof t.x&&(this.x=t.x),"number"==typeof t.y&&(this.y=t.y)}static identity(){return new e({a:0,k:1,x:0,y:0})}toRaw(){const t={};return"number"==typeof this.a&&(t.a=this.a),"number"==typeof this.k&&(t.k=this.k),"number"==typeof this.x&&(t.x=this.x),"number"==typeof this.y&&(t.y=this.y),t}toString(){const{a:t=0,k:e=1,x:o=0,y:s=0}=this,i=new Float32Array(16);return n.identity(i),n.translate(i,o,s,0),n.scale(i,e,e,e),n.rotate(i,-t,0,0,1),`matrix3d(${Array.prototype.slice.call(i).join(",")})`}}export{n as Matrix,e as Transform};
//# sourceMappingURL=transform.min.js.map
